version: "3.7"
services:
    # MySQL database for the app.
    mariadb:
        image: mariadb:latest
        container_name: maria
        environment:
            - MYSQL_ROOT_PASSWORD=test
            - MYSQL_DATABASE=iotctl
        expose:
            - "3306"
        ports:
            - "3306:3306"
        volumes:
            - ./database:/var/lib/mysql
        tty: true
        networks:
            default:
                ipv4_address: 172.18.0.2

    # For convenient MySQL database management.
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=DB
        restart: always
        ports:
            - "89:89"
        volumes:
            - /sessions
        links:
            - mariadb
        networks:
            default:
                ipv4_address: 172.18.0.4

    # Mosquitto MQTT Broker
    mqtt:
        image: eclipse-mosquitto
        hostname: mosquitto
        container_name: mosquitto
        expose:
            - "1883"
            - "9001"
        ports:
            - "1883:1883"
            - "9001:9001"
        volumes:
            - ./configs/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
            - ./configs/mosquitto.passwd:/mosquitto/config/mosquitto.passwd
        networks:
            default:
                ipv4_address: 172.18.0.3

    # IoT Controller
    backend:
        build:
            context: .
            dockerfile: cmd/web/Dockerfile
        expose:
            - "8081"
        ports:
            - "8081:8081"
        depends_on:
            - mqtt
            - mariadb
        command: ["./wait-for-it.sh", "172.18.0.2:3306", "--", "./web", "start"]
        networks:
            default:
                ipv4_address: 172.18.0.6

    device:
        build:
            context: .
            dockerfile: cmd/device/Dockerfile
        depends_on:
            - mqtt
        command: ["./scripts/wait-for-it.sh", "172.18.0.2:3306", "--", "./build/device", "start"]
        networks:
            default:
                ipv4_address: 172.18.0.10

    # Vue.js front-end
    frontend:
        build:
            context: web/ui
        expose:
            - "8080"
        ports:
            - "8080:8080"
        command: ["http-server", "dist"]
        networks:
            default:
                ipv4_address: 172.18.0.5

    # Hades API
    hades:
        build:
            context: iot-hades/
        command: ["/bin/bash", "./start.sh"]
        volumes:
            - ./iot-hades/checkpoints:/checkpoints
            - ./iot-hades/policies:/policies
            - ./iot-hades/models:/models
            - ./iot-hades/states:/states
        depends_on:
            - mqtt
        networks:
            default:
                ipv4_address: 172.18.0.7


networks:
    default:
        ipam:
            config:
                - subnet: 172.18.0.0/24
